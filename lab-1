#include <stdio.h>
#include <stdlib.h>

#define MAX 3  // Maximum size of the stack

int top = -1; // Initialize top of the stack
int stack[MAX]; // Declare the stack array

void push();
void pop();
void display();

int main() {
    int num;

    while (1) {
        printf("\nPerform operations on the stack:");
        printf("\n1. Push an element");
        printf("\n2. Pop an element");
        printf("\n3. Show stack elements");
        printf("\n4. End");
        printf("\n\nEnter your choice: ");
        scanf("%d", &num);

        switch (num) {
        case 1:
            push();
            break;
        case 2:
            pop();
            break;
        case 3:
            display();
            break;
        case 4:
            exit(0);
        default:
            printf("\nInvalid choice!!");
        }
    }
}

void push() {
    int x;

    if (top == MAX - 1) {
        printf("\nOverflow!! Stack is full. Max size: %d\n", MAX);
    } else {
        printf("\nEnter the element to be added onto the stack: ");
        scanf("%d", &x);
        top = top + 1;
        stack[top] = x;
        printf("\nElement %d pushed onto stack.\n", x);
    }
}

void pop() {
    if (top == -1) {
        printf("\nUnderflow!! Stack is empty.\n");
    } else {
        printf("\nPopped element: %d\n", stack[top]); // Access the correct array
        top = top - 1;
    }
}

void display() {
    if (top == -1) {
        printf("\nUnderflow!! Stack is empty.\n");
    } else {
        printf("\nElements present in the stack:\n");
        for (int i = top; i >= 0; --i) {
            printf("%d\n", stack[i]);
        }
    }
}
