#include <stdio.h>
#include <stdlib.h>

#define MAX 10

int a[MAX][MAX], vis[MAX], queue[MAX], front = -1, rear = -1, n;

void bfs(int v);

void enqueue(int v) {
    if (rear == MAX - 1)
        printf("Queue Overflow\n");
    else {
        if (front == -1)
            front = 0;
        queue[++rear] = v;
    }
}

int dequeue() {
    if (front == -1 || front > rear) {
        printf("Queue Underflow\n");
        return -1;
    } else {
        int v = queue[front++];
        if (front > rear)
            front = rear = -1;
        return v;
    }
}

int main() {
    int i, j, start;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            scanf("%d", &a[i][j]);

    for (i = 1; i <= n; i++)
        vis[i] = 0;

    printf("Enter the starting vertex: ");
    scanf("%d", &start);

    printf("BFS traversal starting from vertex %d:\n", start);
    bfs(start);

    return 0;
}

void bfs(int v) {
    int i;

    enqueue(v);
    vis[v] = 1;

    while (front != -1) {
        v = dequeue();
        printf("%d ", v);

        for (i = 1; i <= n; i++) {
            if (a[v][i] == 1 && vis[i] == 0) {
                enqueue(i);
                vis[i] = 1;
            }
        }
    }
}
