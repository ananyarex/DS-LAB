


#include <stdio.h>
#include <stdlib.h>

int st, qu;
char ch;

struct Node {
    int data;
    struct Node *link;
};

typedef struct Node node;

node *new1, *curr, *start = NULL, *temp, *prev, *next;

void create() {
    do {
        new1 = (node *)malloc(sizeof(node));
        printf("Enter value:\n");
        scanf("%d", &new1->data);
        if (start == NULL) {
            start = new1;
            curr = new1;
        } else {
            curr->link = new1;
            curr = new1;
        }
        printf("Do you want to insert another element? (Y/N)\n");
        scanf(" %c", &ch); 
    } while (ch == 'y' || ch == 'Y');
    curr->link = NULL;
}

void insertend() {
    new1 = (node *)malloc(sizeof(node));
    printf("Enter element:\n");
    scanf("%d", &new1->data);
    new1->link = NULL;
    if (start == NULL) {
        start = new1;
        return;
    }
    temp = start;
    while (temp->link != NULL) {
        temp = temp->link;
    }
    temp->link = new1;
}

void deleteend() {
    if (start == NULL) {
        printf("Empty linked list\n");
        return;
    }

    temp = start;
    if (start->link == NULL) {
        free(start);
        start = NULL;
        return;
    }

    prev = NULL;
    next = start;
    while (next->link != NULL) {
        prev = next;
        next = next->link;
    }
    prev->link = NULL;
    free(next);
}

void deletebeg() {
    if (start == NULL) {
        printf("Empty\n");
        return;
    }

    temp = start;
    start = start->link;
    free(temp);
}

void display() {
    if (start == NULL) {
        printf("Empty\n");
        return;
    }
    printf("Elements of the list:\n");
    temp = start;
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->link;
    }
    printf("\n");
}

void llstack() {
    while (1) {
        printf("Enter a choice:\n1: push()\n2: pop()\n3: display()\n4: exit\n");
        scanf("%d", &st);
        switch (st) {
            case 1: insertend(); break;
            case 2: deleteend(); break;
            case 3: display(); break;
            case 4: return;break;
            default: printf("Invalid choice\n");
        }
    }
}

void llqueue() {
    while (1) {
        printf("Enter a choice:\n1: insert()\n2: delete()\n3: display()\n4: exit\n");
        scanf("%d", &qu);
        switch (qu) {
            case 1: insertend(); break;
            case 2: deletebeg(); break; 
            case 3: display(); break;
            case 4: return;break;
            default: printf("Invalid choice\n");
        }
    }
}

void main() {
    while (1) {
        printf("Enter your choice:\n1: create\n2: exit\n3: stack implementation\n4: queue implementation\n");
        scanf("%c", &ch);
        switch (ch) {
            case '1': create(); break;
            case '2': exit(0);
            case '3': llstack(); break;
            case '4': llqueue(); break;
            default: printf("Invalid choice\n");
        }
    }
}
